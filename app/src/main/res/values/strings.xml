<resources>
    <string name="app_name">Executor Framework Demo</string>
    <string name="general_info" formatted="false">
        Executor: an interface which has a execute method. It is designed to decouple task submission from running.\n\n
        Callable: An Interface similar to runnable but allow a result to be returned.\n\n
        Future: Like a promise in JavaScript. It represents the result for an asynchronous task.\n\n
        ExecutorService: an interface which extends Executor interface. It is used to manage threads in the threads pool.\n\n
        ThreadPoolExecutor: a class that implements ExecutorService which gives fine control on the thread pool (Eg, core pool size, max pool size, keep alive time, etc.)\n\n
        ScheduledThreadPoolExecutor: a class that extends ThreadPoolExecutor. It can schedule tasks after a given delay or periodically.\n\n
        Executors: a class that offers factory and utility methods for the aforementioned classes.\n\n
        ExecutorCompletionService: a class that arranges submitted task to be placed on a queue for accessing results.
    </string>
</resources>
